services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  user-service:
    build: ./user-service
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: mydb
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    volumes:
      - ./user-service:/usr/src/app
    command: npm run start:dev

  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - rabbitmq
    volumes:
      - ./api-gateway:/usr/src/app
      - api_gateway_node_modules:/usr/src/app/node_modules
    command: ["npx", "nodemon", "index.js"]

volumes:
  pg_data:
  api_gateway_node_modules: